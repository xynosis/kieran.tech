var parseStyleString;

parseStyleString = function(str) {
  var cssprop, i, len, ref, result, splitted;
  result = {};
  if (str != null) {
    ref = str.split(/;(?![^(]*\))/g);
    for (i = 0, len = ref.length; i < len; i++) {
      cssprop = ref[i];
      if (cssprop != null) {
        splitted = cssprop.split(/:(.+)/);
        if (splitted.length > 1) {
          result[splitted[0].trim()] = splitted[1].trim();
        }
      }
    }
  }
  return result;
};

module.exports = {
  _name: "styles",
  _v: 1,
  _prio: 700,
  _mergers: require("./_merger").copy({
    source: "styles"
  }),
  mixins: [require("./style"), require("./combined"), require("./parseElement")],
  connectedCallback: function() {
    if (this._isFirstConnect) {
      return this.$combined({
        path: "styles",
        value: this.styles,
        parseProp: parseStyleString,
        normalize: this.$style.normalizeObj,
        cbFactory: function(name) {
          var el;
          el = this.$parseElement.byString(name);
          return [
            function(val) {
              return this.$style.setNormalized(el, val);
            }
          ];
        }
      });
    }
  }
};

;
