var isFunction;

isFunction = require("./_helpers").isFunction;

module.exports = {
  _name: "c-for-clustered",
  _v: 1,
  mixins: [require("./for-clustered")],
  _elLookup: {
    cForClustered: {
      extract: {
        "": ["tag", "names", "template", "get-count", "get-data", "computed", "id", "tap"]
      },
      cb: function(o, arg) {
        var c, children, ref;
        children = arg.children;
        c = o.container = document.createElement(o.tag || "div");
        if (isFunction(children)) {
          o.template = children;
        }
        o.names = (ref = o.names) != null ? ref.split(",") : void 0;
        this.$nextTick(function() {
          var clusterContainer;
          clusterContainer = this.$clusteredFor(o);
          if (o.tap != null) {
            return this.$path.setValue({
              path: o.tap,
              value: clusterContainer
            });
          }
        });
        return c;
      }
    }
  }
};

;
